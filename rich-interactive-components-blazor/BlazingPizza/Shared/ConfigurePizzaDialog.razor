@inject HttpClient HttpClient

<div class="dialog-container">
    <div class="dialog">
        <div class="dialog-title">
            <h2>@Pizza.Special!.Name</h2>
            @Pizza.Special.Description
        </div>
        <form class="dialog-body">
            <div>
                @if (supportSizing)
                {
                    <label for="pizza-size">Size:</label>
                    <input type="range" @bind="@Pizza.Size" @bind:event="oninput" min="@Pizza.MinimumSize" max="@Pizza.MaximumSize" step="1" name="pizza-size" id="pizza-size">
                }
                <span class="size-label">
                    @(Pizza.Size)" (Â£@Pizza.GetFormattedTotalPrice())
                </span>
            </div>
        </form>

        <div class="dialog-buttons">
            <button type="reset" class="btn btn-secondary me-auto" @onclick="OnCancel">Cancel</button>
            <span class="me-center">
                Price: <span class="price">@(Pizza.GetFormattedTotalPrice())</span>
            </span>
            <button type="button" class="btn btn-success ms-auto" @onclick="OnConfirm">Order ></button>
        </div>
    </div>
</div>

@code {
    [Parameter, EditorRequired]
    public required Pizza Pizza { get; set; }
    [Parameter, EditorRequired]
    public EventCallback OnCancel { get; set; }
    [Parameter, EditorRequired]
    public EventCallback OnConfirm { get; set; }

    bool supportSizing = true;

    protected override void OnInitialized()
    {
        if (Pizza is { Special.FixedSize: not null })
        {
            Pizza.Size = Pizza.Special.FixedSize.Value;
            supportSizing = false;
        }
    }
}